{"components":{"schemas":{"com.ww.models.PII":{"properties":{"lastName":{"type":"string"},"firstName":{"type":"string"},"phoneType":{"type":"string","enum":["MOBILE","WORK","HOME","UNKNOWN"]},"utcOffset":{"format":"int32","type":"integer"},"gender":{"type":"string","enum":["MALE","FEMALE","UNKNOWN"]},"dob":{"format":"date","type":"string"},"timeZone":{"type":"string"},"middleName":{"type":"string"},"title":{"type":"string"}},"required":["firstName","timeZone","utcOffset","gender"]},"com.ww.models.User":{"properties":{"pii":{"$ref":"#/components/schemas/com.ww.models.PII"},"credentials":{"$ref":"#/components/schemas/com.ww.models.Credentials"},"registrationDate":{"format":"date-time","type":"string"},"uuid":{"type":"uuid"}},"required":["uuid","registrationDate","credentials","pii"]},"com.ww.models.Credentials":{"properties":{"password":{"type":"string"},"email":{"type":"string"}},"required":["email","password"]},"com.ww.requests.UserRequest":{"properties":{"pii":{"$ref":"#/components/schemas/com.ww.models.PII"},"credentials":{"$ref":"#/components/schemas/com.ww.models.Credentials"}},"required":["credentials","pii"]},"com.ww.requests.PatchUserRequest":{"properties":{"lastName":{"type":"string"},"firstName":{"type":"string"},"phoneType":{"type":"string","enum":["MOBILE","WORK","HOME","UNKNOWN"]},"password":{"type":"string"},"utcOffset":{"format":"int32","type":"integer"},"gender":{"type":"string","enum":["MALE","FEMALE","UNKNOWN"]},"dob":{"format":"date","type":"string"},"timeZone":{"type":"string"},"middleName":{"type":"string"},"title":{"type":"string"}}}}},"servers":[{"url":"http://localhost:9000","description":"Optional server description, e.g. Main (production) server"}],"openapi":"3.0.0","paths":{"/users":{"post":{"summary":"Create a new user","requestBody":{"description":"User object that needs to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.ww.requests.UserRequest"}}}},"responses":{"200":{"description":"returns the uuid as a string of the newly created user.","content":{"application/json":{"schema":{"type":"string"}}}}},"operationId":"post","tags":["users"]}},"/users/{email}":{"patch":{"summary":"Update an existing user","requestBody":{"description":"Update any property or properties of the user.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.ww.requests.PatchUserRequest"}}}},"responses":{"200":{"description":"returns the uuid as a string of the newly created user.","content":{"application/json":{"schema":{"type":"string"}}}}},"operationId":"patch","parameters":[{"in":"path","name":"email","schema":{"type":"string"},"required":true}],"tags":["users"]},"get":{"summary":"Get a user by email address.","responses":{"200":{"description":"returns the user whose email matches the email from the request.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.ww.models.User"}}}},"404":{"description":"user not found."}},"operationId":"get","parameters":[{"in":"path","name":"email","schema":{"type":"string"},"required":true}],"tags":["users"]},"put":{"summary":"Replace the PII or password of an existing user","requestBody":{"description":"User object that will replace the existing user object based on the email match.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.ww.requests.UserRequest"}}}},"responses":{"200":{"description":"returns the uuid as a string of the newly created user.","content":{"application/json":{"schema":{"type":"string"}}}}},"operationId":"put","parameters":[{"in":"path","name":"email","schema":{"type":"string"},"required":true}],"tags":["users"]}},"/tokens":{"post":{"summary":"Create a new JWT token","requestBody":{"description":"Create a new JWT token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.ww.models.Credentials"}}}},"responses":{"200":{"description":"returns a JWT token which can be used with the /test endoint","content":{"application/json":{"schema":{"type":"string"}}}}},"operationId":"post","tags":["auth"]}},"/test":{"get":{"summary":"A secured endpoint to check if the provided JWT token is valid or not.","requestBody":{"description":"Test a JWT token","parameters":[{"in":"header","name":"JWT_TOKEN","schema":{"type":"string"},"required":true,"description":"The JWT token which you generated via POST /tokens endpoint."}]},"responses":{"200":{"description":"returns the user whose email matches the email in the JWT payload.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.ww.models.User"}}}}},"operationId":"test","tags":["auth"]}},"/greeting/{lang}":{"get":{"operationId":"greet","parameters":[{"in":"path","name":"lang","schema":{"type":"string"},"required":true}],"tags":["routes"]}}},"info":{"description":"Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.","title":"Sample API","version":"1.0-SNAPSHOT"},"tags":[{"name":"routes"}]}